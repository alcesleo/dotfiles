#!/usr/bin/env bash
# A more user friendly command to remove branches.
#
#   Usage: git remove-branch <branch>
#
# Replaces these commands, in order:
#   * git branch -d <branch>
#   * git branch -D <branch>
#   * git push --delete origin <branch>

# The remote branch has to be determined before the local branch is deleted
remote_branch=$(git rev-parse --abbrev-ref --symbolic-full-name "$1@{upstream}" 2>&1)

# Attempt to safely remove the given branch
output=$(git branch -d "$1" 2>&1)
exit_status=$?

# Intercept the command to see if the error message is regarding the branch
# not being fully merged, if that is the case, prompt the user to delete the
# branch
if [[ $output == *"not fully merged"* ]]; then
   echo "The branch '$1' is not fully merged."
   read -r -p "Are you sure you want to remove it? [y/N] " response
   if [[ $response == "y" || $response == "yes" ]]; then
      git branch -D "$1"
   fi
else
   # Do not intercept other kinds of output
   echo "$output"

   # If the command failed in a different way, exit early
   if [[ $exit_status -ne 0 ]]; then
      exit $exit_status
   fi
fi

# Prompt to remove the remote branch if there is one
if ! [[ $remote_branch == *"no upstream configured"* ]]; then
   read -r -p "Do you to remove the remote branch '$remote_branch'? [y/N] " response
   if [[ $response == "y" || $response == "yes" ]]; then
      # Break the local name of the remote in 2, like git push wants it
      # For example: origin/my/branch -> origin my/branch
      remote_and_branch=$(echo "$remote_branch" | sed 's/\// /')
      git push --delete $remote_and_branch
   fi
fi
